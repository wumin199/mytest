# This is a Dockerfile for ros on an KEBA Control
# Generated by stj
FROM ubuntu:bionic

# setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && \
    apt-get install -q -y --no-install-recommends tzdata && \
    rm -rf /var/lib/apt/lists/*

# install packages
RUN apt-get update && apt-get install -q -y --no-install-recommends \
    dirmngr \
    gnupg2 \
    build-essential \
    pcl-tools \
    nano \
    && rm -rf /var/lib/apt/lists/*

# setup keys
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros1-latest.list

# setup environment
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

ENV ROS_DISTRO melodic

# install ros packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-melodic-ros-base=1.4.1-0* \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    python-wstool \
    python-catkin-tools \    
    ros-melodic-moveit \
    ros-melodic-industrial-core \
    ros-melodic-joint-state-publisher \
    ros-melodic-joint-state-publisher-gui \
    ros-melodic-rosbridge-server \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep
RUN rosdep init && \
  rosdep update --rosdistro $ROS_DISTRO

# clone and build ros packages for communication with kecontrol 
RUN mkdir -p /opt/ros-keba/melodic/src 
WORKDIR /opt/ros-keba/melodic
RUN /bin/bash -c '. /opt/ros/melodic/setup.bash; catkin init'
WORKDIR /opt/ros-keba/melodic/src
RUN git clone https://github.com/smith-doug/rmi_driver
RUN git clone https://github.com/ros-industrial/robot_movement_interface
WORKDIR /opt/ros-keba/melodic
RUN /bin/bash -c '. /opt/ros/melodic/setup.bash; catkin build'

# add ros distro folders to source
RUN echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc
RUN echo "source /opt/ros-keba/melodic/devel/setup.bash" >> ~/.bashrc

ENV CONTROL_IP 192.168.100.100

# setup entrypoint
WORKDIR /
COPY ./entrypoint.sh /
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]